name: ci-pipeline 

on:
  push:
    branches:  ["none"]
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci_build: 
    name: CI build
    runs-on: [selfhosted,self-hosted,windows]

    env:
      DOCKER_IMAGE: organisation/demobackend:${{ github.sha }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_HOST_URL: https://sonarcloud.io
      OWASP_DATA_DIR: ./owasp-data

    steps:
    - uses: actions/checkout@v4
    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'     # or adopt, zulu, etc.
        java-version: '11'          # adjust Java version

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-

    - name: Run tests
      run: mvn test --batch-mode    
    - name: maven-build
      run: mvn clean install  -Dskiptests=true

    - name: SonarQube Scan
      run: mvn sonar:sonar -Dsonar.projectKey=<your_project_key> -Dsonar.host.url=${{ env.SONAR_HOST_URL }} -Dsonar.login=${{ env.SONAR_TOKEN }}

      # 7. OWASP Dependency Check
    - name: OWASP Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: "My Java App"
        path: "."
        format: "ALL"
        out: "reports"
        data: ${{ env.OWASP_DATA_DIR }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3



    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        tags: ${{ env.DOCKER_IMAGE }}
        load: true

      # 10. Trivy Image Scan
    - name: Trivy scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.DOCKER_IMAGE }}
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'

    # 11. Docker Login (GitHub Container Registry)
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # 12. Push Docker image (only on main)
    - name: Push Docker image
      if: github.ref == 'refs/heads/main'
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ env.DOCKER_IMAGE }}
