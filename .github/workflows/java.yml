name: Java CI with Docker and Security Scans

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ matrix.os }}-${{ matrix.java }}
  cancel-in-progress: true

jobs:
  build-and-scan:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        java: [11]
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Run tests
        run: mvn test

      - name: Build Maven package
        run: mvn package --no-transfer-progress

      - name: SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
        run: mvn sonar:sonar -Dsonar.login=$SONAR_TOKEN

      - name: OWASP Dependency Track Scan
        run: |
          # Placeholder for OWASP Dependency Track integration
          echo "Run OWASP Dependency Track scan here"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image (load)
        uses: docker/build-push-action@v5
        with:
          context: .
          tags: myorg/myapp:${{ github.sha }}
          load: true

      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@v0.10.0
        with:
          image-ref: myorg/myapp:${{ github.sha }}

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PAT }}

      - name: Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          tags: myorg/myapp:${{ github.sha }}
          push: true
